{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "16626817707095678344"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Name of the environment"
      }
    },
    "location": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Primary location for all resources"
      }
    },
    "principalId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Id of the user or app to assign application roles"
      }
    }
  },
  "variables": {
    "resourceToken": "[toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location')))]",
    "tags": {
      "azd-env-name": "[parameters('environmentName')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[format('rg-{0}', parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "resources",
      "resourceGroup": "[format('rg-{0}', parameters('environmentName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environmentName": {
            "value": "[parameters('environmentName')]"
          },
          "resourceToken": {
            "value": "[variables('resourceToken')]"
          },
          "principalId": {
            "value": "[parameters('principalId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "15406293753877073939"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location of this resource group"
              }
            },
            "environmentName": {
              "type": "string",
              "metadata": {
                "description": "Environment name"
              }
            },
            "resourceToken": {
              "type": "string",
              "metadata": {
                "description": "A suffix to provide resource naming uniqueness"
              }
            },
            "principalId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Id of the user or app to assign application roles"
              }
            }
          },
          "variables": {
            "resourceBaseName": "[format('{0}-{1}', parameters('environmentName'), parameters('resourceToken'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2023-06-01",
              "name": "[format('vnet-{0}', variables('resourceBaseName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/16"
                  ]
                },
                "subnets": [
                  {
                    "name": "aca-subnet",
                    "properties": {
                      "addressPrefix": "10.0.0.0/23",
                      "delegations": [
                        {
                          "name": "Microsoft.App/environments",
                          "properties": {
                            "serviceName": "Microsoft.App/environments"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "pe-subnet",
                    "properties": {
                      "addressPrefix": "10.0.2.0/24",
                      "privateEndpointNetworkPolicies": "Disabled"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2023-07-01",
              "name": "[format('cr{0}', replace(variables('resourceBaseName'), '-', ''))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "adminUserEnabled": false
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[format('st{0}', replace(variables('resourceBaseName'), '-', ''))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "supportsHttpsTrafficOnly": true,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "networkAcls": {
                  "defaultAction": "Deny",
                  "bypass": "AzureServices"
                }
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', format('st{0}', replace(variables('resourceBaseName'), '-', '')), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('st{0}', replace(variables('resourceBaseName'), '-', '')))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', format('st{0}', replace(variables('resourceBaseName'), '-', '')), 'default', 'goose-local')]",
              "properties": {
                "enabledProtocols": "NFS",
                "rootSquash": "NoRootSquash"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', format('st{0}', replace(variables('resourceBaseName'), '-', '')), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', format('st{0}', replace(variables('resourceBaseName'), '-', '')), 'default', 'goose-config')]",
              "properties": {
                "enabledProtocols": "NFS",
                "rootSquash": "NoRootSquash"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', format('st{0}', replace(variables('resourceBaseName'), '-', '')), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', format('st{0}', replace(variables('resourceBaseName'), '-', '')), 'default', 'ollama-model')]",
              "properties": {
                "enabledProtocols": "NFS",
                "rootSquash": "NoRootSquash"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', format('st{0}', replace(variables('resourceBaseName'), '-', '')), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[format('privatelink.file.{0}', environment().suffixes.storage)]",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', format('privatelink.file.{0}', environment().suffixes.storage), 'storage-link')]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', variables('resourceBaseName')))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.file.{0}', environment().suffixes.storage))]",
                "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', variables('resourceBaseName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-06-01",
              "name": "[format('pe-{0}', format('st{0}', replace(variables('resourceBaseName'), '-', '')))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[format('{0}/subnets/pe-subnet', resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', variables('resourceBaseName'))))]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "storage-connection",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', format('st{0}', replace(variables('resourceBaseName'), '-', '')))]",
                      "groupIds": [
                        "file"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', format('st{0}', replace(variables('resourceBaseName'), '-', '')))]",
                "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', variables('resourceBaseName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-06-01",
              "name": "[format('{0}/{1}', format('pe-{0}', format('st{0}', replace(variables('resourceBaseName'), '-', ''))), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "storage-config",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.file.{0}', environment().suffixes.storage))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.file.{0}', environment().suffixes.storage))]",
                "[resourceId('Microsoft.Network/privateEndpoints', format('pe-{0}', format('st{0}', replace(variables('resourceBaseName'), '-', ''))))]"
              ]
            },
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2023-05-01",
              "name": "[format('cae-{0}', variables('resourceBaseName'))]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "vnetConfiguration": {
                  "infrastructureSubnetId": "[format('{0}/subnets/aca-subnet', resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', variables('resourceBaseName'))))]"
                },
                "workloadProfiles": [
                  {
                    "name": "Consumption",
                    "workloadProfileType": "Consumption"
                  },
                  {
                    "name": "GPU",
                    "workloadProfileType": "Consumption-GPU-NC8as-T4",
                    "minimumCount": 0,
                    "maximumCount": 10
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', variables('resourceBaseName')))]"
              ]
            },
            {
              "type": "Microsoft.App/managedEnvironments/storages",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', format('cae-{0}', variables('resourceBaseName')), 'goose-local-storage')]",
              "properties": {
                "nfsAzureFile": {
                  "server": "[format('{0}.file.{1}', format('st{0}', replace(variables('resourceBaseName'), '-', '')), environment().suffixes.storage)]",
                  "shareName": "goose-local",
                  "accessMode": "ReadWrite"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceBaseName')))]",
                "[resourceId('Microsoft.Storage/storageAccounts', format('st{0}', replace(variables('resourceBaseName'), '-', '')))]"
              ]
            },
            {
              "type": "Microsoft.App/managedEnvironments/storages",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', format('cae-{0}', variables('resourceBaseName')), 'goose-config-storage')]",
              "properties": {
                "nfsAzureFile": {
                  "server": "[format('{0}.file.{1}', format('st{0}', replace(variables('resourceBaseName'), '-', '')), environment().suffixes.storage)]",
                  "shareName": "goose-config",
                  "accessMode": "ReadWrite"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceBaseName')))]",
                "[resourceId('Microsoft.Storage/storageAccounts', format('st{0}', replace(variables('resourceBaseName'), '-', '')))]"
              ]
            },
            {
              "type": "Microsoft.App/managedEnvironments/storages",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', format('cae-{0}', variables('resourceBaseName')), 'ollama-model-storage')]",
              "properties": {
                "nfsAzureFile": {
                  "server": "[format('{0}.file.{1}', format('st{0}', replace(variables('resourceBaseName'), '-', '')), environment().suffixes.storage)]",
                  "shareName": "ollama-model",
                  "accessMode": "ReadWrite"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceBaseName')))]",
                "[resourceId('Microsoft.Storage/storageAccounts', format('st{0}', replace(variables('resourceBaseName'), '-', '')))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('principalId')))]",
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2022-04-01",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', format('cr{0}', replace(variables('resourceBaseName'), '-', '')))]",
              "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', format('cr{0}', replace(variables('resourceBaseName'), '-', ''))), resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceBaseName'))), 'AcrPull')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]",
                "principalId": "[reference(resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceBaseName'))), '2023-05-01', 'full').identity.principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceBaseName')))]",
                "[resourceId('Microsoft.ContainerRegistry/registries', format('cr{0}', replace(variables('resourceBaseName'), '-', '')))]"
              ]
            }
          ],
          "outputs": {
            "AZURE_CONTAINER_REGISTRY_ENDPOINT": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', format('cr{0}', replace(variables('resourceBaseName'), '-', ''))), '2023-07-01').loginServer]"
            },
            "AZURE_CONTAINER_REGISTRY_NAME": {
              "type": "string",
              "value": "[format('cr{0}', replace(variables('resourceBaseName'), '-', ''))]"
            },
            "AZURE_CONTAINER_APPS_ENVIRONMENT_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/managedEnvironments', format('cae-{0}', variables('resourceBaseName')))]"
            },
            "AZURE_CONTAINER_APPS_ENVIRONMENT_NAME": {
              "type": "string",
              "value": "[format('cae-{0}', variables('resourceBaseName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}', parameters('environmentName')))]"
      ]
    }
  ],
  "outputs": {
    "AZURE_LOCATION": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "AZURE_TENANT_ID": {
      "type": "string",
      "value": "[tenant().tenantId]"
    },
    "AZURE_RESOURCE_GROUP": {
      "type": "string",
      "value": "[format('rg-{0}', parameters('environmentName'))]"
    },
    "AZURE_CONTAINER_REGISTRY_ENDPOINT": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_CONTAINER_REGISTRY_ENDPOINT.value]"
    },
    "AZURE_CONTAINER_REGISTRY_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_CONTAINER_REGISTRY_NAME.value]"
    },
    "AZURE_CONTAINER_APPS_ENVIRONMENT_ID": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_ID.value]"
    },
    "AZURE_CONTAINER_APPS_ENVIRONMENT_NAME": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}', parameters('environmentName'))), 'Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_NAME.value]"
    }
  }
}