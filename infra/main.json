{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "11849108821996028141"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "metadata": {
        "description": "Name of the environment that can be used as part of naming resource convention"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Primary location for all resources"
      }
    }
  },
  "variables": {
    "resourceToken": "[take(toLower(uniqueString(subscription().id, parameters('environmentName'), parameters('location'))), 5)]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "resources",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "environmentName": {
            "value": "[parameters('environmentName')]"
          },
          "resourceToken": {
            "value": "[variables('resourceToken')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "5953020234842227482"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "metadata": {
                "description": "The location of this resource group"
              }
            },
            "environmentName": {
              "type": "string",
              "metadata": {
                "description": "Environment name used for deriving resource names"
              }
            },
            "resourceToken": {
              "type": "string",
              "metadata": {
                "description": "A suffix to provide resource naming uniqueness"
              }
            }
          },
          "variables": {
            "baseName": "[toLower(format('{0}-{1}', parameters('environmentName'), parameters('resourceToken')))]",
            "sanitized": "[toLower(replace(replace(parameters('environmentName'), '-', ''), '_', ''))]",
            "sanitizedBase": "[if(empty(variables('sanitized')), 'env', variables('sanitized'))]",
            "containerRegistryName": "[take(format('acr{0}{1}00', variables('sanitizedBase'), parameters('resourceToken')), 50)]",
            "storageAccountName": "[take(format('st{0}{1}000', variables('sanitizedBase'), parameters('resourceToken')), 24)]",
            "identityName": "[format('id-{0}', variables('baseName'))]",
            "containerAppsEnvironmentName": "[format('cae-{0}', variables('baseName'))]",
            "ollamaAppName": "[format('ollama-{0}', variables('baseName'))]",
            "gooseAppName": "[format('goose-{0}', variables('baseName'))]",
            "seedScript": "[format('az account set --subscription {0}\nsleep 60\naz acr import --resource-group {1} --name {2} --source mcr.microsoft.com/azuredocs/containerapps-helloworld:latest --image goose-agent:latest\naz acr import --resource-group {1} --name {2} --source mcr.microsoft.com/azuredocs/containerapps-helloworld:latest --image ollama:latest', subscription().subscriptionId, resourceGroup().name, variables('containerRegistryName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2023-06-01",
              "name": "[format('vnet-{0}', variables('baseName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/16"
                  ]
                },
                "subnets": [
                  {
                    "name": "aca-subnet",
                    "properties": {
                      "addressPrefix": "10.0.0.0/23",
                      "delegations": [
                        {
                          "name": "aca-delegation",
                          "properties": {
                            "serviceName": "Microsoft.App/environments"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "pe-subnet",
                    "properties": {
                      "addressPrefix": "10.0.2.0/24",
                      "privateEndpointNetworkPolicies": "Disabled"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2023-07-01",
              "name": "[variables('containerRegistryName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Basic"
              },
              "properties": {
                "adminUserEnabled": false,
                "zoneRedundancy": "Disabled"
              }
            },
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[variables('identityName')]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Resources/deploymentScripts",
              "apiVersion": "2020-10-01",
              "name": "seed-acr-images",
              "location": "[parameters('location')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')))]": {}
                }
              },
              "kind": "AzureCLI",
              "properties": {
                "azCliVersion": "2.61.0",
                "retentionInterval": "P1D",
                "timeout": "PT30M",
                "cleanupPreference": "OnSuccess",
                "scriptContent": "[variables('seedScript')]"
              },
              "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName')), 'Microsoft.Authorization/roleAssignments', guid(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName')), variables('identityName'), 'Contributor'))]",
                "[extensionResourceId(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName')), 'Microsoft.Authorization/roleAssignments', guid(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName')), variables('identityName'), 'AcrPush'))]",
                "[extensionResourceId(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName')), 'Microsoft.Authorization/roleAssignments', guid(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName')), variables('identityName'), 'Reader'))]",
                "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2023-01-01",
              "name": "[variables('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Premium_LRS"
              },
              "kind": "FileStorage",
              "properties": {
                "publicNetworkAccess": "Disabled",
                "supportsHttpsTrafficOnly": false,
                "allowSharedKeyAccess": true,
                "allowBlobPublicAccess": false,
                "networkAcls": {
                  "defaultAction": "Deny",
                  "bypass": "None"
                }
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', 'goose-local')]",
              "properties": {
                "enabledProtocols": "NFS",
                "shareQuota": 256,
                "rootSquash": "NoRootSquash"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', 'goose-config')]",
              "properties": {
                "enabledProtocols": "NFS",
                "shareQuota": 128,
                "rootSquash": "NoRootSquash"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
              "apiVersion": "2023-01-01",
              "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', 'ollama-model')]",
              "properties": {
                "enabledProtocols": "NFS",
                "shareQuota": 1024,
                "rootSquash": "NoRootSquash"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Network/privateDnsZones",
              "apiVersion": "2020-06-01",
              "name": "[format('privatelink.file.{0}', environment().suffixes.storage)]",
              "location": "global"
            },
            {
              "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
              "apiVersion": "2020-06-01",
              "name": "[format('{0}/{1}', format('privatelink.file.{0}', environment().suffixes.storage), format('{0}-link', format('vnet-{0}', variables('baseName'))))]",
              "location": "global",
              "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', variables('baseName')))]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.file.{0}', environment().suffixes.storage))]",
                "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', variables('baseName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints",
              "apiVersion": "2023-06-01",
              "name": "[format('{0}-pe', variables('storageAccountName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "subnet": {
                  "id": "[format('{0}/subnets/pe-subnet', resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', variables('baseName'))))]"
                },
                "privateLinkServiceConnections": [
                  {
                    "name": "[format('{0}-connection', variables('storageAccountName'))]",
                    "properties": {
                      "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                      "groupIds": [
                        "file"
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', variables('baseName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
              "apiVersion": "2023-06-01",
              "name": "[format('{0}/{1}', format('{0}-pe', variables('storageAccountName')), 'default')]",
              "properties": {
                "privateDnsZoneConfigs": [
                  {
                    "name": "file",
                    "properties": {
                      "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.file.{0}', environment().suffixes.storage))]"
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', format('privatelink.file.{0}', environment().suffixes.storage))]",
                "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-pe', variables('storageAccountName')))]"
              ]
            },
            {
              "type": "Microsoft.App/managedEnvironments",
              "apiVersion": "2024-03-01",
              "name": "[variables('containerAppsEnvironmentName')]",
              "location": "[parameters('location')]",
              "properties": {
                "vnetConfiguration": {
                  "infrastructureSubnetId": "[format('{0}/subnets/aca-subnet', resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', variables('baseName'))))]"
                },
                "workloadProfiles": [
                  {
                    "name": "Consumption",
                    "workloadProfileType": "Consumption"
                  },
                  {
                    "name": "GPU",
                    "workloadProfileType": "Consumption-GPU-NC8as-T4"
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}', variables('baseName')))]"
              ]
            },
            {
              "type": "Microsoft.App/managedEnvironments/storages",
              "apiVersion": "2025-02-02-preview",
              "name": "[format('{0}/{1}', variables('containerAppsEnvironmentName'), 'goose-local-storage')]",
              "properties": {
                "nfsAzureFile": {
                  "server": "[format('{0}.privatelink.file.core.windows.net', variables('storageAccountName'))]",
                  "shareName": "goose-local",
                  "accessMode": "ReadWrite"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvironmentName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', variables('storageAccountName'), 'default', 'goose-local')]"
              ]
            },
            {
              "type": "Microsoft.App/managedEnvironments/storages",
              "apiVersion": "2025-02-02-preview",
              "name": "[format('{0}/{1}', variables('containerAppsEnvironmentName'), 'goose-config-storage')]",
              "properties": {
                "nfsAzureFile": {
                  "server": "[format('{0}.privatelink.file.core.windows.net', variables('storageAccountName'))]",
                  "shareName": "goose-config",
                  "accessMode": "ReadWrite"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvironmentName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', variables('storageAccountName'), 'default', 'goose-config')]"
              ]
            },
            {
              "type": "Microsoft.App/managedEnvironments/storages",
              "apiVersion": "2025-02-02-preview",
              "name": "[format('{0}/{1}', variables('containerAppsEnvironmentName'), 'ollama-model-storage')]",
              "properties": {
                "nfsAzureFile": {
                  "server": "[format('{0}.privatelink.file.core.windows.net', variables('storageAccountName'))]",
                  "shareName": "ollama-model",
                  "accessMode": "ReadWrite"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvironmentName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', variables('storageAccountName'), 'default', 'ollama-model')]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', variables('containerRegistryName'))]",
              "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName')), variables('identityName'), 'AcrPull')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')), '2018-11-30').principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', variables('containerRegistryName'))]",
              "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName')), variables('identityName'), 'AcrPush')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8311e382-0749-4cb8-b61a-304f252e45ec')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')), '2018-11-30').principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', variables('containerRegistryName'))]",
              "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName')), variables('identityName'), 'Reader')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')), '2018-11-30').principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
              ]
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2020-04-01-preview",
              "scope": "[format('Microsoft.ContainerRegistry/registries/{0}', variables('containerRegistryName'))]",
              "name": "[guid(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName')), variables('identityName'), 'Contributor')]",
              "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')), '2018-11-30').principalId]",
                "principalType": "ServicePrincipal"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
              ]
            },
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2024-03-01",
              "name": "[variables('ollamaAppName')]",
              "location": "[parameters('location')]",
              "tags": {
                "azd-service-name": "ollama"
              },
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')))]": {}
                }
              },
              "properties": {
                "environmentId": "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvironmentName'))]",
                "workloadProfileName": "GPU",
                "configuration": {
                  "ingress": {
                    "external": false,
                    "targetPort": 11434
                  },
                  "registries": [
                    {
                      "server": "[reference(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName')), '2023-07-01').loginServer]",
                      "identity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
                    }
                  ]
                },
                "template": {
                  "containers": [
                    {
                      "name": "ollama",
                      "image": "mcr.microsoft.com/azuredocs/containerapps-helloworld:latest",
                      "env": [
                        {
                          "name": "OLLAMA_CONTEXT_LENGTH",
                          "value": "32768"
                        }
                      ],
                      "resources": {
                        "cpu": 8,
                        "memory": "56Gi"
                      },
                      "volumeMounts": [
                        {
                          "volumeName": "ollama-models",
                          "mountPath": "/root/.ollama"
                        }
                      ]
                    }
                  ],
                  "scale": {
                    "minReplicas": 1,
                    "maxReplicas": 1
                  },
                  "volumes": [
                    {
                      "name": "ollama-models",
                      "storageType": "AzureFile",
                      "storageName": "ollama-model-storage"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvironmentName'))]",
                "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]",
                "[resourceId('Microsoft.App/managedEnvironments/storages', variables('containerAppsEnvironmentName'), 'ollama-model-storage')]",
                "[resourceId('Microsoft.Resources/deploymentScripts', 'seed-acr-images')]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
              ]
            },
            {
              "type": "Microsoft.App/containerApps",
              "apiVersion": "2024-03-01",
              "name": "[variables('gooseAppName')]",
              "location": "[parameters('location')]",
              "tags": {
                "azd-service-name": "goose-agent"
              },
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName')))]": {}
                }
              },
              "properties": {
                "environmentId": "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvironmentName'))]",
                "workloadProfileName": "Consumption",
                "configuration": {
                  "registries": [
                    {
                      "server": "[reference(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName')), '2023-07-01').loginServer]",
                      "identity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
                    }
                  ],
                  "secrets": []
                },
                "template": {
                  "containers": [
                    {
                      "name": "goose",
                      "image": "mcr.microsoft.com/azuredocs/containerapps-helloworld:latest",
                      "env": [
                        {
                          "name": "OLLAMA_HOST",
                          "value": "[format('{0}', reference(resourceId('Microsoft.App/containerApps', variables('ollamaAppName')), '2024-03-01').configuration.ingress.fqdn)]"
                        }
                      ],
                      "resources": {
                        "cpu": 2,
                        "memory": "4Gi"
                      },
                      "volumeMounts": [
                        {
                          "volumeName": "goose-local",
                          "mountPath": "/root/.local"
                        },
                        {
                          "volumeName": "goose-config",
                          "mountPath": "/root/.config"
                        }
                      ]
                    }
                  ],
                  "scale": {
                    "minReplicas": 1,
                    "maxReplicas": 1
                  },
                  "volumes": [
                    {
                      "name": "goose-local",
                      "storageType": "AzureFile",
                      "storageName": "goose-local-storage"
                    },
                    {
                      "name": "goose-config",
                      "storageType": "AzureFile",
                      "storageName": "goose-config-storage"
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvironmentName'))]",
                "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]",
                "[resourceId('Microsoft.App/managedEnvironments/storages', variables('containerAppsEnvironmentName'), 'goose-config-storage')]",
                "[resourceId('Microsoft.App/managedEnvironments/storages', variables('containerAppsEnvironmentName'), 'goose-local-storage')]",
                "[resourceId('Microsoft.App/containerApps', variables('ollamaAppName'))]",
                "[resourceId('Microsoft.Resources/deploymentScripts', 'seed-acr-images')]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
              ]
            }
          ],
          "outputs": {
            "AZURE_CONTAINER_REGISTRY_ENDPOINT": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName')), '2023-07-01').loginServer]"
            },
            "AZURE_CONTAINER_REGISTRY_NAME": {
              "type": "string",
              "value": "[variables('containerRegistryName')]"
            },
            "AZURE_CONTAINER_APPS_ENVIRONMENT_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.App/managedEnvironments', variables('containerAppsEnvironmentName'))]"
            },
            "AZURE_CONTAINER_APPS_ENVIRONMENT_NAME": {
              "type": "string",
              "value": "[variables('containerAppsEnvironmentName')]"
            },
            "ACA_ENVIRONMENT_IDENTITY_ID": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName'))]"
            },
            "GOOSE_APP_NAME": {
              "type": "string",
              "value": "[variables('gooseAppName')]"
            },
            "OLLAMA_APP_NAME": {
              "type": "string",
              "value": "[variables('ollamaAppName')]"
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "AZURE_LOCATION": {
      "type": "string",
      "value": "[parameters('location')]"
    },
    "AZURE_TENANT_ID": {
      "type": "string",
      "value": "[tenant().tenantId]"
    },
    "AZURE_CONTAINER_REGISTRY_ENDPOINT": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_CONTAINER_REGISTRY_ENDPOINT.value]"
    },
    "AZURE_CONTAINER_REGISTRY_NAME": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_CONTAINER_REGISTRY_NAME.value]"
    },
    "AZURE_CONTAINER_APPS_ENVIRONMENT_ID": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_ID.value]"
    },
    "AZURE_CONTAINER_APPS_ENVIRONMENT_NAME": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.AZURE_CONTAINER_APPS_ENVIRONMENT_NAME.value]"
    },
    "AZURE_CONTAINERAPPS_SERVICE_GOOSE_AGENT_NAME": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.GOOSE_APP_NAME.value]"
    },
    "AZURE_CONTAINERAPPS_SERVICE_OLLAMA_NAME": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Resources/deployments', 'resources'), '2022-09-01').outputs.OLLAMA_APP_NAME.value]"
    }
  }
}